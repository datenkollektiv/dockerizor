buildscript {
    repositories {
        // Maven home of the plugin-publish-plugin
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies { classpath "com.gradle.publish:plugin-publish-plugin:0.9.7" }
}

// First, apply the publishing plugin
plugins {
    id "com.gradle.plugin-publish" version "0.11.0"
    id "java-gradle-plugin"
    // Apply other plugins here, e.g. the kotlin plugin for a plugin written in Kotlin
    // or the groovy plugin if the plugin uses Groovy
}

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'eclipse'

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile localGroovy()

    compile 'com.github.docker-java:docker-java:3.1.5'
    compile 'de.gesellix:unix-socket-factory:2016-04-06T22-21-19'

    testCompile 'junit:junit:4.13'
}

group = 'de.datenkollektiv.dockerizor'
version = '0.9.2.BUILD-SNAPSHOT'

// Use java-gradle-plugin to generate plugin descriptors and specify plugin ids
gradlePlugin {
    plugins {
        dockerizorPlugin {
            id = 'de.datenkollektiv.dockerizor'
            implementationClass = 'com.eclipsesource.dockerizor.Dockerizor'
        }
    }
}

pluginBundle {
    website = 'https://github.com/datenkollektiv/dockerizor'
    vcsUrl = 'https://github.com/datenkollektiv/dockerizor'
    description = 'Gradle plug-in to create a Docker image that includes an Eclipse Virgo container'
    tags = ['virgo', 'docker']

    plugins {
        dockerizorPlugin {
            // id is captured from java-gradle-plugin configuration
            displayName = 'Gradle dockerizor plugin'
        }
    }
}

apply from: file('gradle/publish.gradle')
